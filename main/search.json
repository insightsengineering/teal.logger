[{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/articles/teal-logger.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started","text":"teal.logger package utilizes logger framework record events within package. logger R package supports logging namespaces, hierarchical logging, various log destinations, vectorization, . details logger, can refer : GitHub CRAN","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/articles/teal-logger.html","id":"default-logging-setup-of-teal-logger","dir":"Articles","previous_headings":"","what":"Default Logging Setup of teal.logger","title":"Getting started","text":"teal.logger employs register_logger() function create new logger user-defined namespace. teal.logger comes predefined pair layout logging level. packages teal framework utilize teal.logger log crucial events, setting teal data, alterations filter panel, records merging data slices inside modules, . Defaults teal.logger: Logging level: logger.INFO Logging layout: [{level}] {format(time, \\\"%Y-%m-%d %H:%M:%OS4\\\")} pid:{pid} token:[{token}] {ans} {msg} Logs emitted stdout comprehensive understanding various logging levels layout interpretation, can explore logger documentation.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/articles/teal-logger.html","id":"customizing-the-log-level","dir":"Articles","previous_headings":"","what":"Customizing the Log Level","title":"Getting started","text":"utilizing register_logger(), default logging level new logger logger::INFO. can modify behavior four distinct ways: Using logger interface. Customizing teal‚Äôs logging level: Utilizing function argument register_logger(). Customizing teal‚Äôs logging level: Setting environment variable. Customizing teal‚Äôs logging level: Setting option. Customizing teal‚Äôs logging level: keep mind packages teal framework register loggers upon library loading. Therefore, intend alter default logging level via option system environment variable, ensure modify variable loading library. Example : Alternatively, can change options loading package call register_logger() appropriate namespace name change default single package. E.g. change defaults teal.logger. Replace teal.logger name package want change. comprehensive understanding, consult logger documentation documentation register_logger().","code":"library(teal.logger) register_logger(\"my_namespace\") logger::log_threshold(logger::TRACE, namespace = \"my_namespace\") library(teal.logger) logger::log_threshold(logger::TRACE, namespace = \"teal\") library(teal.logger) register_logger(\"my_namespace\", level = logger::TRACE) library(teal.logger) register_logger(namespace = \"teal\", level = logger::TRACE) library(teal.logger) Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") register_logger(\"my_namespace\") Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") library(teal.logger) library(teal.logger) options(teal.log_level = logger::TRACE) register_logger(\"my_namespace\") options(teal.log_level = logger::TRACE) library(teal.logger) # library(teal) # Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") # won't change the default # Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") # library(teal) # will change the default because teal is attached after changing the variable library(teal.logger) Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") register_logger('teal.logger')"},{"path":"https://insightsengineering.github.io/teal.logger/main/articles/teal-logger.html","id":"customizing-the-log-layout","dir":"Articles","previous_headings":"","what":"Customizing the Log Layout","title":"Getting started","text":"using register_logger(), default log layout new logger [{level}] {format(time, \\\"%Y-%m-%d %H:%M:%OS4\\\")} pid:{pid} token:[{token}] {ans} {msg}.can modify behavior four distinct ways: Using logger interface. Customizing teal‚Äôs logging layout: Utilizing function argument register_logger(). Customizing teal‚Äôs logging layout: Setting environment variable. Customizing teal‚Äôs logging layout: Setting option. Customizing teal‚Äôs logging layout: Like changing log level, remember teal registers logger library loading. Thus, aim modify default logging layout via option system environment variable, ensure adjust variable prior loading library. Example : Alternatively, can change options loading package call register_logger() appropriate namespace name change default single package. E.g. change defaults teal.logger. Replace teal.logger name package want change. additional insights, consult logger documentation documentation register_logger().","code":"library(teal.logger) register_logger(\"my_namespace\") logger::log_layout(\"{level} {msg}\", namespace = \"my_namespace\") library(teal.logger) logger::log_layout(\"{level} {msg}\", namespace = \"teal\") library(teal.logger) register_logger(\"my_namespace\", layout = \"{level} {msg}\") library(teal.logger) register_logger(namespace = \"teal\", layout = \"{level} {msg}\") library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") register_logger(\"my_namespace\") Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") library(teal.logger) library(teal.logger) options(teal.log_layout = \"{level} {msg}\") register_logger(\"my_namespace\") options(teal.log_layout = \"{level} {msg}\") library(teal.logger) library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") # won't change the default Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") library(teal.logger) # will change the default because teal is attached after changing the variable library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") register_logger('teal.logger')"},{"path":"https://insightsengineering.github.io/teal.logger/main/articles/teal-logger.html","id":"customizing-the-log-destination","dir":"Articles","previous_headings":"","what":"Customizing the Log Destination","title":"Getting started","text":"default, teal.logger sends logs stdout. wish alter behavior, need employ logger‚Äôs API. instance, redirect teal‚Äôs logs stderr using logger‚Äôs API:","code":"library(teal.logger) logger::log_appender(logger::appender_stderr, namespace = \"teal\")"},{"path":"https://insightsengineering.github.io/teal.logger/main/articles/teal-logger.html","id":"logging-in-other-teal-x-packages","dir":"Articles","previous_headings":"","what":"Logging in Other teal.X Packages","title":"Getting started","text":"Additional teal.X packages, teal.data, employ register_logger() enroll loggers namespace. package establishes logger namespace equivalent package name, e.g., teal.data creates logger teal.data namespace. package initializes logger package loading utilizes default logging settings, subject modifications explained preceding sections.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/articles/teal-logger.html","id":"example-of-usage","dir":"Articles","previous_headings":"","what":"Example of Usage","title":"Getting started","text":"minimal working example demonstrates logging using teal‚Äôs logging setup. default TEAL.LOG.LEVEL \"INFO\", implying logs level level = 400 won‚Äôt appear stdout.","code":"library(teal.logger) register_logger(namespace = \"my_module\")  logger::log_error(\"This is an ERROR level log from my module\", namespace = \"my_module\") # 200 logger::log_warn(\"This is a WARN level log from my module\", namespace = \"my_module\") # 300 logger::log_success(\"This is a SUCCESS level log from my module\", namespace = \"my_module\") # 350 logger::log_info(\"This is an INFO level log from my module\", namespace = \"my_module\") # 400 logger::log_info(\"This is a DEBUG level log from my module\", namespace = \"my_module\") # 500 logger::log_trace(\"This is a TRACE level log from my module\", namespace = \"my_module\") # 600"},{"path":"https://insightsengineering.github.io/teal.logger/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Konrad Pagacz. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Pagacz K (2024). teal.logger: Logging Setup 'teal' Family Packages. R package version 0.2.0.9003,  https://github.com/insightsengineering/teal.logger/, https://insightsengineering.github.io/teal.logger/main/.","code":"@Manual{,   title = {teal.logger: Logging Setup for the 'teal' Family of Packages},   author = {Dawid Kaledkowski and Konrad Pagacz},   year = {2024},   note = {R package version 0.2.0.9003,  https://github.com/insightsengineering/teal.logger/},   url = {https://insightsengineering.github.io/teal.logger/main/}, }"},{"path":"https://insightsengineering.github.io/teal.logger/main/index.html","id":"teallogger","dir":"","previous_headings":"","what":"Logging Setup for the teal Family of Packages","title":"Logging Setup for the teal Family of Packages","text":"teal.logger R package providing unified setup generating logs using logger package.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Logging Setup for the teal Family of Packages","text":"Alternatively, might want use development version available r-universe.","code":"# stable versions install.packages('teal.logger')  # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.logger@*release\") # beta versions install.packages('teal.logger', repos = c('https://pharmaverse.r-universe.dev', getOption('repos')))  # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.logger\")"},{"path":"https://insightsengineering.github.io/teal.logger/main/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Logging Setup for the teal Family of Packages","text":"understand use package, please refer Getting Started article, provides multiple examples code implementation. showcase example usage","code":"library(teal.logger) register_logger(namespace = \"namespace1\", level = \"INFO\") logger::log_info(\"Hello from namespace1\", namespace = \"namespace1\") logger::log_warn(\"Hello from namespace1\", namespace = \"namespace1\") logger::log_success(\"Hello from namespace1\", namespace = \"namespace1\") # [INFO] 2023-08-31 12:02:41.0678 pid:7128 token:[] namespace1 Hello from namespace1 # [WARN] 2023-08-31 12:02:42.4872 pid:7128 token:[] namespace1 Hello from namespace # [SUCCESS] 2023-08-31 12:02:58.7155 pid:7128 token:[] namespace1 Hello from namespace  register_logger(namespace = \"namespace2\", level = \"WARN\") logger::log_info(\"Hello from namespace2\", namespace = \"namespace2\") logger::log_warn(\"Hello from namespace2\", namespace = \"namespace2\") logger::log_error(\"Hello from namespace2\", namespace = \"namespace2\") # [WARN] 2023-08-31 12:04:34.9361 pid:7128 token:[] namespace2 Hello from namespace2 # [ERROR] 2023-08-31 12:04:35.5721 pid:7128 token:[] namespace2 Hello from namespace2"},{"path":"https://insightsengineering.github.io/teal.logger/main/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Logging Setup for the teal Family of Packages","text":"encounter bug feature request - please file issue. questions, discussions staying date, please use ‚Äúteal‚Äù channel pharmaverse slack workspace.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/get_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Get value from environmental variable or R option or default in that order if the previous one is missing. ‚Äî get_val","title":"Get value from environmental variable or R option or default in that order if the previous one is missing. ‚Äî get_val","text":"Get value environmental variable R option default order previous one missing.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/get_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get value from environmental variable or R option or default in that order if the previous one is missing. ‚Äî get_val","text":"","code":"get_val(env_var_name, option_name, default = NULL)"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/get_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get value from environmental variable or R option or default in that order if the previous one is missing. ‚Äî get_val","text":"env_var_name (character(1)) name system variable option_name (character(1)) name option default optional, default value Sys.getenv(env_var_name) getOption(option_name) empty","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/get_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get value from environmental variable or R option or default in that order if the previous one is missing. ‚Äî get_val","text":"object class","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/layout_teal_glue_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"Generate log layout function using common variables available via glue syntax including shiny session token","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/layout_teal_glue_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"","code":"layout_teal_glue_generator(layout)"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/layout_teal_glue_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"layout (character(1)) log layout. Alongside standard logging variables provided logging package (e.g. pid) token variable can used write last 8 characters shiny session token log.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/layout_teal_glue_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"function taking level msg arguments - keeping original call creating generator generator attribute returned calling log_layout currently used layout","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/layout_teal_glue_generator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"function behaves way logger::layout_glue_generator() allows shiny session token (last 8 chars) included logging layout","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/log_shiny_input_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto logging input changes in Shiny app ‚Äî log_shiny_input_changes","title":"Auto logging input changes in Shiny app ‚Äî log_shiny_input_changes","text":"called server section Shiny app.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/log_shiny_input_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto logging input changes in Shiny app ‚Äî log_shiny_input_changes","text":"","code":"log_shiny_input_changes(   input,   namespace = NA_character_,   excluded_inputs = character(),   excluded_pattern = \"_width$\" )"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/log_shiny_input_changes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto logging input changes in Shiny app ‚Äî log_shiny_input_changes","text":"input passed Shiny server namespace name namespace excluded_inputs character vector input names exclude logging excluded_pattern character length one including grep pattern names excluded logging","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/log_shiny_input_changes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Auto logging input changes in Shiny app ‚Äî log_shiny_input_changes","text":"Function similar behavior logger::log_shiny_input_changes() adjusted teal needs.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/log_shiny_input_changes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auto logging input changes in Shiny app ‚Äî log_shiny_input_changes","text":"","code":"if (FALSE) { library(shiny)  ui <- bootstrapPage(   numericInput(\"mean1\", \"mean1\", 0),   numericInput(\"mean2\", \"mean2\", 0),   numericInput(\"sd\", \"sd\", 1),   textInput(\"title\", \"title\", \"title\"),   textInput(\"foo\", \"This is not used at all, still gets logged\", \"foo\"),   passwordInput(\"password\", \"Password not to be logged\", \"secret\"),   plotOutput(\"plot\") )  server <- function(input, output) {   log_shiny_input_changes(input, excluded_inputs = \"password\", excluded_pattern = \"mean\")    output$plot <- renderPlot({     hist(rnorm(1e3, input$mean, input$sd), main = input$title)   }) }  shinyApp(ui = ui, server = server) }"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/log_system_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Logs the basic information about the session. ‚Äî log_system_info","title":"Logs the basic information about the session. ‚Äî log_system_info","text":"Logs basic information session.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/log_system_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logs the basic information about the session. ‚Äî log_system_info","text":"","code":"log_system_info()"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/log_system_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logs the basic information about the session. ‚Äî log_system_info","text":"invisible(NULL)","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_handlers.html","id":null,"dir":"Reference","previous_headings":"","what":"Register handlers for logging messages, warnings and errors ‚Äî register_handlers","title":"Register handlers for logging messages, warnings and errors ‚Äî register_handlers","text":"Register handlers logging messages, warnings errors","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_handlers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register handlers for logging messages, warnings and errors ‚Äî register_handlers","text":"","code":"register_handlers(namespace, package = namespace)"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_handlers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register handlers for logging messages, warnings and errors ‚Äî register_handlers","text":"namespace (character(1)) logger namespace package (character(1)) package name","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_handlers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register handlers for logging messages, warnings and errors ‚Äî register_handlers","text":"NULL invisibly. Called side effects.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_handlers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register handlers for logging messages, warnings and errors ‚Äî register_handlers","text":"function registers global handlers messages, warnings errors. handlers investigate call stack contains function package, message, warning error logged respective namespace. handlers registered per package type. Consecutive calls effect. Registering handlers package base supported. Use TEAL.LOG_MUFFLE environmental variable teal.log_muffle R option optionally control recover strategies. TRUE (default value) handler jump muffle restart given type condition continue (output console). Applicable message warning types . errors suppressed.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_handlers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Register handlers for logging messages, warnings and errors ‚Äî register_handlers","text":"Registering handlers forbidden within tryCatch() withCallingHandlers(). , handlers registered possible.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_handlers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register handlers for logging messages, warnings and errors ‚Äî register_handlers","text":"","code":"if (FALSE) { register_handlers(\"teal.logger\") # see the outcome globalCallingHandlers() }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"","code":"register_logger(namespace = NA_character_, layout = NULL, level = NULL)"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"namespace (character(1) NA_character_) name logging namespace layout (character(1)) log layout. Alongside standard logging variables provided logging package (e.g. pid) token variable can used write last 8 characters shiny session token log. level (character(1) call) log level. Can passed character one logger's objects. See logger::log_threshold() information.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"invisible(NULL)","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_logger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"Creates new logging namespace specified namespace argument. layout level arguments set NULL (default), function gets values system variables R options. deciding use (either argument, R option system variable), function picks first non NULL value, checking order: Function argument. System variable. R option. layout level can set system environment variables, respectively: teal.log_layout TEAL.LOG_LAYOUT, teal.log_level TEAL.LOG_LEVEL. neither argument environment variable set function uses following R options: options(teal.log_layout), passed logger::layout_glue_generator(), options(teal.log_level), passed logger::log_threshold() logs output stdout default. Check logger information layouts use logger.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_logger.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"thin wrapper around logger package.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/register_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"","code":"options(teal.log_layout = \"{msg}\") options(teal.log_level = \"ERROR\") register_logger(namespace = \"new_namespace\") # \\donttest{ logger::log_info(\"Hello from new_namespace\", namespace = \"new_namespace\") # }"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/suppress_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress logger logs ‚Äî suppress_logs","title":"Suppress logger logs ‚Äî suppress_logs","text":"function suppresses logger running tests via testthat. suppress logs single test, add function call within testthat::test_that expression. suppress logs entire test file, call function start file.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/suppress_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress logger logs ‚Äî suppress_logs","text":"","code":"suppress_logs()"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/suppress_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress logger logs ‚Äî suppress_logs","text":"NULL invisible","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/suppress_logs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress logger logs ‚Äî suppress_logs","text":"","code":"testthat::test_that(\"An example test\", {   suppress_logs()   testthat::expect_true(TRUE) }) #> Test passed ü•á"},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/teal.logger-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.logger: Logging Setup for the 'teal' Family of Packages ‚Äî teal.logger-package","title":"teal.logger: Logging Setup for the 'teal' Family of Packages ‚Äî teal.logger-package","text":"Logging Setup teal Family Packages.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/reference/teal.logger-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.logger: Logging Setup for the 'teal' Family of Packages ‚Äî teal.logger-package","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com Authors: Konrad Pagacz contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/news/index.html","id":"teallogger-0209003","dir":"Changelog","previous_headings":"","what":"teal.logger 0.2.0.9003","title":"teal.logger 0.2.0.9003","text":"New function log_shiny_input_changes based logger implementation, curated teal needs. allows track shiny inputs changes teal modules TRACE level appended namespace name.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/news/index.html","id":"teallogger-020","dir":"Changelog","previous_headings":"","what":"teal.logger 0.2.0","title":"teal.logger 0.2.0","text":"CRAN release: 2024-03-24 New function register_handlers register global handlers logging messages, warnings errors. Specified minimal version package dependencies. Update installation instructions README.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/news/index.html","id":"teallogger-013","dir":"Changelog","previous_headings":"","what":"teal.logger 0.1.3","title":"teal.logger 0.1.3","text":"CRAN release: 2023-09-08 Fixed CRAN requirements first CRAN submission.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/news/index.html","id":"teallogger-012","dir":"Changelog","previous_headings":"","what":"teal.logger 0.1.2","title":"teal.logger 0.1.2","text":"Updated usage installation instructions README. Updated phrasing Getting Started vignette.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/news/index.html","id":"teallogger-011","dir":"Changelog","previous_headings":"","what":"teal.logger 0.1.1","title":"teal.logger 0.1.1","text":"Updated installation instruction README.","code":""},{"path":"https://insightsengineering.github.io/teal.logger/main/news/index.html","id":"teallogger-010","dir":"Changelog","previous_headings":"","what":"teal.logger 0.1.0","title":"teal.logger 0.1.0","text":"Initial release teal.logger, package logging setup teal applications.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.logger/main/news/index.html","id":"misc-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"Misc","title":"teal.logger 0.1.0","text":"functions suppress_logs log_system_info now part API package now exported.","code":""}]
